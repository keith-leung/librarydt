/*
 * generated by Xtext 2.35.0
 */
package mdu.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import mdu.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import mdu.mydsl.services.MyDslGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getLibraryAccess().getGroup(), "rule__Library__Group__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_4(), "rule__Library__Group_4__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_4_3(), "rule__Library__Group_4_3__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_5(), "rule__Library__Group_5__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_5_3(), "rule__Library__Group_5_3__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_6(), "rule__Library__Group_6__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_6_3(), "rule__Library__Group_6_3__0");
			builder.put(grammarAccess.getBookAccess().getGroup(), "rule__Book__Group__0");
			builder.put(grammarAccess.getBookAccess().getGroup_5(), "rule__Book__Group_5__0");
			builder.put(grammarAccess.getMemberAccess().getGroup(), "rule__Member__Group__0");
			builder.put(grammarAccess.getMemberAccess().getGroup_5(), "rule__Member__Group_5__0");
			builder.put(grammarAccess.getMemberAccess().getGroup_5_3(), "rule__Member__Group_5_3__0");
			builder.put(grammarAccess.getLoanAccess().getGroup(), "rule__Loan__Group__0");
			builder.put(grammarAccess.getLibraryAccess().getNameAssignment_2(), "rule__Library__NameAssignment_2");
			builder.put(grammarAccess.getLibraryAccess().getBooksAssignment_4_2(), "rule__Library__BooksAssignment_4_2");
			builder.put(grammarAccess.getLibraryAccess().getBooksAssignment_4_3_1(), "rule__Library__BooksAssignment_4_3_1");
			builder.put(grammarAccess.getLibraryAccess().getMembersAssignment_5_2(), "rule__Library__MembersAssignment_5_2");
			builder.put(grammarAccess.getLibraryAccess().getMembersAssignment_5_3_1(), "rule__Library__MembersAssignment_5_3_1");
			builder.put(grammarAccess.getLibraryAccess().getLoansAssignment_6_2(), "rule__Library__LoansAssignment_6_2");
			builder.put(grammarAccess.getLibraryAccess().getLoansAssignment_6_3_1(), "rule__Library__LoansAssignment_6_3_1");
			builder.put(grammarAccess.getBookAccess().getIsbnAssignment_1(), "rule__Book__IsbnAssignment_1");
			builder.put(grammarAccess.getBookAccess().getNameAssignment_4(), "rule__Book__NameAssignment_4");
			builder.put(grammarAccess.getBookAccess().getAuthorAssignment_5_1(), "rule__Book__AuthorAssignment_5_1");
			builder.put(grammarAccess.getBookAccess().getAvailableAssignment_7(), "rule__Book__AvailableAssignment_7");
			builder.put(grammarAccess.getMemberAccess().getNameAssignment_1(), "rule__Member__NameAssignment_1");
			builder.put(grammarAccess.getMemberAccess().getMemberIdAssignment_4(), "rule__Member__MemberIdAssignment_4");
			builder.put(grammarAccess.getMemberAccess().getLoansAssignment_5_2(), "rule__Member__LoansAssignment_5_2");
			builder.put(grammarAccess.getMemberAccess().getLoansAssignment_5_3_1(), "rule__Member__LoansAssignment_5_3_1");
			builder.put(grammarAccess.getLoanAccess().getLoanDateAssignment_3(), "rule__Loan__LoanDateAssignment_3");
			builder.put(grammarAccess.getLoanAccess().getDueDateAssignment_5(), "rule__Loan__DueDateAssignment_5");
			builder.put(grammarAccess.getLoanAccess().getBookAssignment_7(), "rule__Loan__BookAssignment_7");
			builder.put(grammarAccess.getLoanAccess().getBorrowerAssignment_9(), "rule__Loan__BorrowerAssignment_9");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
