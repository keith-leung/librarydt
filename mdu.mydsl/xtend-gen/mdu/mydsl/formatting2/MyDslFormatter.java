/**
 * generated by Xtext 2.35.0
 */
package mdu.mydsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import library.Book;
import library.Library;
import library.Loan;
import library.Member;
import mdu.mydsl.services.MyDslGrammarAccess;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;

  protected void _format(final Library library, @Extension final IFormattableDocument document) {
    EList<Book> _books = library.getBooks();
    for (final Book book : _books) {
      document.<Book>format(book);
    }
    EList<Member> _members = library.getMembers();
    for (final Member member : _members) {
      document.<Member>format(member);
    }
    EList<Loan> _loans = library.getLoans();
    for (final Loan loan : _loans) {
      document.<Loan>format(loan);
    }
  }

  public void format(final Object library, final IFormattableDocument document) {
    if (library instanceof XtextResource) {
      _format((XtextResource)library, document);
      return;
    } else if (library instanceof Library) {
      _format((Library)library, document);
      return;
    } else if (library instanceof EObject) {
      _format((EObject)library, document);
      return;
    } else if (library == null) {
      _format((Void)null, document);
      return;
    } else if (library != null) {
      _format(library, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(library, document).toString());
    }
  }
}
